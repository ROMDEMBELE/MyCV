plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

apply from: project.lintAndroid
apply from: project.detekt

def getVersionCode = { ->
    try {
        def code = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'log', '-1', '--format=%ct'
            standardOutput = code
        }
        return Integer.parseInt(code.toString().trim())
    }
    catch (ignored) {
        return -1
    }
}

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--dirty'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null
    }
}

android {
    compileSdkVersion project.compileSdkVersion
    defaultConfig {
        applicationId "com.diabeloop.architecturesample"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode getVersionCode()
        versionName getVersionName()
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        if (names.contains("mock")
                && buildType.name == "release") {
            ignore = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = 11
    }
    namespace 'com.diabeloop.architecture'
}

dependencies {
    implementation project(":domain")
    implementation project(":data")
    implementation Kotlin.stdlib
    implementation AndroidX.constraintLayout
    implementation AndroidX.navigation.fragmentKtx
    implementation AndroidX.navigation.uiKtx
    implementation AndroidX.appCompat
    implementation Google.android.material
    implementation Google.dagger.hilt.android

    testImplementation KotlinX.coroutines.test
    testImplementation Testing.junit.jupiter
    testImplementation "io.mockk:mockk:_"
    testImplementation Testing.junit4

    kapt(Google.dagger.hilt.android.compiler)

}
